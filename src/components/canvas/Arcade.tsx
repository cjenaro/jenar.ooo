/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { MeshPortalMaterial, useGLTF } from '@react-three/drei'
import { folder, useControls } from 'leva'
import RoundButton from './RoundButton'
import Joystick from './Joystick'
import Switches from './Switches'
import { useGSAP } from '@gsap/react'
import gsap from 'gsap'
import * as THREE from 'three'
import { useRouter } from 'next/router'

export function Arcade(props) {
  //@ts-ignore
  const { nodes, materials } = useGLTF('/seperated.glb')
  const {
    bPosition,
    aPosition,
    boxPosition,
    cPosition,
    dPosition,
    ePosition,
    fPosition,
    position,
    intensity,
    color,
    size,
    screenPosition,
  } = useControls('buttons', {
    box: folder({
      boxPosition: [-0.307, -0.296, 0.115],
    }),
    roundButtons: folder({
      aPosition: { step: 0.01, value: [0.418, -0.675, 0.572] },
      bPosition: { step: 0.01, value: [0.267, -0.675, 0.572] },
      cPosition: { step: 0.01, value: [0.115, -0.675, 0.572] },
      dPosition: { step: 0.01, value: [0.115, -0.637, 0.403] },
      ePosition: { step: 0.01, value: [0.267, -0.637, 0.403] },
      fPosition: { step: 0.01, value: [0.418, -0.637, 0.403] },
    }),
    rectAreaLight: folder({
      position: [-0.1, 0.5, 0],
      intensity: 50,
      color: '#ff618a',
      size: [2, 1],
    }),
    'Screen Position': folder({
      screenPosition: [0, 0, 0],
    }),
  })

  const roundButtonBodyMaterial = materials['1']
  const roundButtonTipMaterial = materials['3']

  const arcadeRef = useRef(null)
  const portalRef = useRef(null)

  useGSAP(() => {
    if (arcadeRef.current) {
      gsap.to(arcadeRef.current.position, {
        x: 0.5,
        duration: 1,
      })
    }
  })

  return (
    <group {...props} dispose={null} ref={arcadeRef}>
      <group name='box' position={boxPosition}>
        <mesh
          name='mainBody'
          castShadow
          receiveShadow
          geometry={nodes.Cube001.geometry}
          material={roundButtonBodyMaterial}
        />
        <mesh
          name='whiteDetails'
          castShadow
          receiveShadow
          geometry={nodes.Cube001_1.geometry}
          material={materials['2']}
        />
        <group>
          <mesh
            name='whiteLights'
            castShadow
            receiveShadow
            geometry={nodes.Cube001_2.geometry}
            material={materials['3']}
            position={screenPosition}
          />
          <MeshPortalMaterial ref={portalRef} side={THREE.DoubleSide}>
            <rectAreaLight
              width={size[0]}
              height={size[1]}
              name='whiteLights'
              intensity={intensity}
              color={color}
              position={position}
              rotation={[Math.PI * 2, 0, 0]}
            />
          </MeshPortalMaterial>
        </group>
        <mesh castShadow receiveShadow geometry={nodes.Cube001_3.geometry} material={materials['4']} scale={3} />
      </group>
      <group name='roundButtons'>
        <RoundButton
          position={aPosition}
          bodyGeometry={nodes.Cube002.geometry}
          bodyMaterial={roundButtonBodyMaterial}
          tipGeometry={nodes.Cube002_1.geometry}
          tipMaterial={roundButtonTipMaterial}
        />
        <RoundButton
          position={bPosition}
          bodyGeometry={nodes.Cube003.geometry}
          bodyMaterial={roundButtonBodyMaterial}
          tipGeometry={nodes.Cube003_1.geometry}
          tipMaterial={roundButtonTipMaterial}
        />
        <RoundButton
          position={cPosition}
          bodyGeometry={nodes.Cube004.geometry}
          bodyMaterial={roundButtonBodyMaterial}
          tipGeometry={nodes.Cube004_1.geometry}
          tipMaterial={roundButtonTipMaterial}
        />
        <RoundButton
          position={dPosition}
          bodyGeometry={nodes.Cube005.geometry}
          bodyMaterial={roundButtonBodyMaterial}
          tipGeometry={nodes.Cube005_1.geometry}
          tipMaterial={roundButtonTipMaterial}
        />
        <RoundButton
          position={ePosition}
          bodyGeometry={nodes.Cube006.geometry}
          bodyMaterial={roundButtonBodyMaterial}
          tipGeometry={nodes.Cube006_1.geometry}
          tipMaterial={roundButtonTipMaterial}
        />
        <RoundButton
          position={fPosition}
          bodyGeometry={nodes.Cube007.geometry}
          tipGeometry={nodes.Cube007_1.geometry}
          bodyMaterial={roundButtonBodyMaterial}
          tipMaterial={roundButtonTipMaterial}
        />
      </group>
      <Joystick
        material={roundButtonBodyMaterial}
        whiteMaterial={roundButtonTipMaterial}
        stickGeometry={nodes.Cube008.geometry}
        whiteGeometry={nodes.Cube008_1.geometry}
      />
      <Switches material={roundButtonBodyMaterial} geometry={nodes.button006.geometry} />
    </group>
  )
}

useGLTF.preload('/seperated.glb')
